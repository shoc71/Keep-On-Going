August 28 - September 3

dsn_class (v.0.3.4)
- creating txt files and made the autosave function for level progress
- loading save file so player continues like nothing happened before
- do not upload your own save file
- PR_numbers_(#289)
- links_(https://github.com/shoc71/dont-stop-now/pull/289)

- FIX_1
    - Added some required conditionals for better stability.
- PR_numbers_(#296)
- links_(https://github.com/shoc71/dont-stop-now/pull/296)

dsn_levels (v.0.4.2)
- Added an additional way to restart the level by pressing R. A safe restart setting was added to the settings (to prevent accidental restarts). 
    - This lets the player choose from 1 or 2 R taps to restart the level.
- Put in a timer to not have pressing left or right on the menu interfere with changing settings in the settings page
- Music volume is now controllable with a A/D slider in the settings page.
- Some instructions/guidelines were put into the settings page as well
- Levels are now locked behind level progress
- PR_numbers_(#289)
- links_(https://github.com/shoc71/dont-stop-now/pull/289)

Main (v.0.2.5)
- *incorrectly labelled as main (v.0.2.6)
- added lines for autosave and new settings in levels
- PR_numbers_(#289)
- links_(https://github.com/shoc71/dont-stop-now/pull/289)

levels.txt (v.0.5.1 - v.0.5.4)
- *incorrectly labelled as levels.txt (v.0.4.0)
- added new levels
- small corrections to art
- PR_numbers_(#288)
- links_(https://github.com/shoc71/dont-stop-now/pull/288)

- *incorrectly labelled as levels.txt (v.0.4.1)
- added tutorial levels for new players as context to play
- minor correction to levels work and art
- a few new levels have been added
- PR_numbers_(#290)
- links_(https://github.com/shoc71/dont-stop-now/pull/290/files)

- *incorrectly labelled as levels.txt (v.0.4.2)
- a few new levels have been added
- PR_numbers_(#294)
- links_(https://github.com/shoc71/dont-stop-now/pull/294)

- *incorrectly labelled as levels.txt (v.0.4.3)
- a few new levels have been added
- updated a few levels
- PR_numbers_(#295)
- links_(https://github.com/shoc71/dont-stop-now/pull/295)

- *incorrectly labelled as levels.txt (v.0.4.4)
- a few new levels have been added
- tested with new collision logic from fix
- PR_numbers_(#297)
- links_(https://github.com/shoc71/dont-stop-now/pull/297)

- *incorrectly labelled as levels.txt (v.0.4.5)
- added one new level
- all levels have been play tested and passable on medium
- PR_numbers_(#300)
- links_(https://github.com/shoc71/dont-stop-now/pull/300)


Files
- labelled as dsn_patch_13
- 8 new txt files have been made to store levels (50 is too many to navigate through)
- PR_numbers_(#292)
- links_(https://github.com/shoc71/dont-stop-now/pull/292)

Images
- added lock.pngs with transition images for animation
- PR_numbers_()
- links_()

Additional Notes
- putting main into a patch as a backup for levels.txt
- PR_numbers_(#291)
- links_(https://github.com/shoc71/dont-stop-now/pull/291/files)

- Second Great Split for txt files into different branches for players to unlock

========

August 21 - August 27

dsn_class (v.0.3.2 - v.0.3.4)
- *incorrectly labelled as dsn_class (v.0.3.1)
- Collision rework
    - Collision detection:
        -  4 collision boxes (up, down, left and right of the player) have been resized. 
            - These are used to help decide what type of collision occurs (wall, ceiling, or platform)
        -  larger box surrounding the player and these smaller collision boxes.
    - Collision logic:
        - there are self.jump_y and self.grav_y (jumpy gravy) and self.left_x and self.right_x. 
            - These are the first line of defense in ensuring the player stays within bounds.
        - For each type of collision (wall, ceiling, and platform), there is an additional line of code that will put the player back in bounds (or outside the collided object).
- PR_numbers_(#273)
- links_(https://github.com/shoc71/dont-stop-now/pull/273)

- *incorrectly labelled as dsn_class (v.0.3.2)
- Changing color names to be accurate and consistent in levels.txt (v.0.4.9)
- PR_numbers_(#280)
- links_(https://github.com/shoc71/dont-stop-now/pull/280)

- *incorrectly labelled as dsn_class (v.0.3.3)
- slider for background color is added
- enhancements to the replay function
- Fixed player going into and below or above small blocks when colliding on the side. 
- PR_numbers_(#282)
- links_(https://github.com/shoc71/dont-stop-now/pull/282)

dsn_levels (v.0.3.9 - v.0.4.1)
- Editing Level Zero 
- PR_numbers_(#280)
- links_(https://github.com/shoc71/dont-stop-now/pull/280)

- Changing color names to be accurate and consistent in levels.txt (v.0.4.9)
- PR_numbers_(#275)
- links_(https://github.com/shoc71/dont-stop-now/pull/275)

- Changed it so Replays now take in forced respawns
- The Replays page now has help text to assist the player in using the Replays feature.
- Replays now have text in/text out options (copy/paste)
- Replays is fully functioning
- Reworked Settings/Options to be a bit more clean and smart
- Music selection was removed from settings/options.
- Settings/Options now have a slider to change the background between WHITE and LIGHT_GREY
- Settings/Options also have a held function that will speed up the selection the longer the player holds A/D.
- PR_numbers_(#282)
- links_(https://github.com/shoc71/dont-stop-now/pull/282)

- added new text in level_selector for more clear instructions
- PR_numbers_(#286)
- links_(https://github.com/shoc71/dont-stop-now/pull/286)

Main (v.0.2.4)
- *incorrectly labelled as main (v.0.2.5)
- adding filepath to levels.txt for consistent
- PR_numbers_(#273)
- links_(https://github.com/shoc71/dont-stop-now/pull/273)

levels.txt (v.0.4.7 - v.0.5.1)
- *incorrectly labelled as levels.txt (v.0.3.5)
- 2 added new levels
- PR_numbers_(#272)
- links_(https://github.com/shoc71/dont-stop-now/pull/272)

- *incorrectly labelled as levels.txt (v.0.3.6)
- edited levels and fixed art
- PR_numbers_(#279)
- links_(https://github.com/shoc71/dont-stop-now/pull/279)

- *incorrectly labelled as levels.txt (v.0.3.7)
- edited levels and fixed art
- added a few levels as well
- PR_numbers_(#280)
- links_(https://github.com/shoc71/dont-stop-now/pull/280)

- *incorrectly labelled as levels.txt (v.0.3.8)
- minor corrections to art and levels
- 2 new levels added
- PR_numbers_(#284)
- links_(https://github.com/shoc71/dont-stop-now/pull/284)

- *incorrectly labelled as levels.txt (v.0.3.9)
- adjusting and testing levels
- 2 new levels added
- PR_numbers_(#286)
- links_(https://github.com/shoc71/dont-stop-now/pull/286)

Music
- 1 new music file
- PR_numbers_(#283)
- links_(https://github.com/shoc71/dont-stop-now/pull/283)

=============

August 14 - August 20

dsn_class (v.0.2.8 - v.0.3.1)
- added licorice_black color_constant
- PR_numbers_()
- links_()

- *incorrectly labelled as dsn_class (v.0.2.8)
- song track list got updated including all the new songs available
- PR_numbers_()
- links_()

- *incorrectly labelled as dsn_class (v.0.2.9)
- Added Music to the game:
    - Moved Music to be used in the scope of the main loop.
    - swich_music which will randomly choose a track (that's not menu and not credits)
    - set_music which will allow a specific music track to be chosen along with specific volume settings, how many times it'll loop, start time, and how much miliseconds it takes to fade in (optional)
    - transition_music which uses time to eventually increase the volume
- PR_numbers_()
- links_()

- *incorrectly labelled as dsn_class(v.0.2.9)
- FIX_1
    - Added Licorice_Black to the color lookup for load_levels
- PR_numbers_()
- links_()

- *incorrectly labelled as dsn_class (v.0.3.0)
- replays files are created and read in the replay class
- created DSNelement
- PR_numbers_(#263)
- links_(https://github.com/shoc71/dont-stop-now/pull/263)

- *incorrectly labelled as dsn_class (v.0.3.0) fix 1
- Changed ReplayChain to detect length from self.check_len (own counter) rather than relying on death counter. 
    - This sacrifices some time (O(n) now instead of O(1))
- PR_numbers_(#265)
- links_(https://github.com/shoc71/dont-stop-now/pull/265)

dsn_levels (v.0.3.6 - v.0.3.8)
- slightly adjusted the menuscene text "hit space..." to go down a little not to overlap with the pngs
- PR_numbers_()
- links_()

- music is being added and used in levels with transitions
- moved fancy title into image class for code
- altering the jump to be less delayed (200 --> 150 milliseconds)
- removing a redundant self.diff_factor in gravity
- PR_numbers_()
- links_()

- FIX_1
    - Fixed a spelling mistake in a comment and fully fixed jumping. 
    - change the timing for held jumps from 200 to 150 milliseconds.
    - The fix was that the jump boost wasn't reset to it's default value on death, causing the jump to continue when the player respawned.
- PR_numbers_()
- links_()

- dsn_levels no longer crashes when completing the last level. Now it'll just take you back to the main menu.
- LevelSelect now doesn't display any disclaimer text
- Added the speed jump modifier to the player jump in LevelSelect
- There's a new Replays option on the menu
    - For level select, the speed modifier moves too fast for the text boxes to load in/out.
    - File out will write the data of all completed levels to replays_out.txt.
    - File in will read the data from replays_in.
    - Selecting the file in option will bring the player to a level select screen. 
        - If there's no data on that level, it'll say "NO DATA". 
        - Otherwise, the level will be able to be selected if there's data.
    - Selecting a replay level will put both you (purple) and a replay ghost (grey). 
        - A countdown will start and once done, both players will start moving.
        - Whoever reaches the end first, wins
- PR_numbers_(#263)
- links_(https://github.com/shoc71/dont-stop-now/pull/263)

- FIX_1
    - removed self.deaths as its unreliable
- PR_numbers_()
- links_()

Main (v.0.2.2 - v.0.2.3)
- added caption and icon functions (icon isn't working so a separate issue shall be opened for that)
- PR_numbers_()
- links_()

- added music calling functions and added filepathing to title
- PR_numbers_()
- links_()

- FIX_1
    - Fixed the window caption removing file_path name from the window caption
- PR_numbers_(#267)
- links_(https://github.com/shoc71/dont-stop-now/pull/267)

levels.txt (v.0.4.2 - v.0.4.6)
- *incorrectly labelled as levels.txt (v.0.3.0)
- edited level candles to be beatable
- PR_numbers_()
- links_()

- *incorrectly labelled as levels.txt (v.0.3.0)
- edited all the levels to be beatable and tested
    - texts have been formatted in the correct spots (fonts can be changed whenever)
    - all platforms have been fixed and properly placed (mouse is fine, two pillars is not)
    - art has been refined to a clear quality and everything looks good and is in a valid game
- PR_numbers_()
- links_()

- *incorrectly labelled as levels.txt (v.0.3.2)
- added new hard level
- PR_numbers_()
- links_()

- *incorrectly labelled as levels.txt (v.0.3.3)
- rearranged the order of levels based on difficulty
- PR_numbers_(#269)
- links_(https://github.com/shoc71/dont-stop-now/pull/269)

- *incorrectly labelled as levels.txt (v.0.3.4)
- added a few extra easy transition levels 
- PR_numbers_(#271)
- links_(https://github.com/shoc71/dont-stop-now/pull/271)

images
- 5 images of the purple player icon have been uploaded in folder
- deleted 4 other images that couldn't be used as a game_icon
- PR_numbers_()
- links_()

LICENSE
- changing license
- PR_numbers_()
- links_()

README
- tiny edit for further clarity
- PR_numbers_()
- links_()

Music
- renaming the music files to have an underscore ("_") and have them under the assets/music folder
- PR_numbers_()
- links_()

Additional Notes
- the naming is finally correct - NOOOOOOOOOO II GOT MESSED UP AGAIN
- more txt files have been made for replays
    - replay is not accurate to gameplay, this needs to be fixed
- I plan on making more difficult levels as most of them, currently, feel too easy to beat
- 5 text boxes should be used instead of 3 for the replays files texts here

===================

August 7 - August 13

dsn_class (v.0.2.7)
- comments added to the code for better readability
- PR_numbers_()
- links_()

dsn_levels (v.0.3.4 - v.0.3.5)
- FIX_1
    - Changed jump to be more slightly delayed
- PR_numbers_()
- links_()

- comments added to the code for better readability
- PR_numbers_()
- links_()

Main (v.0.2.1)
- comments added to the code for better readability
- PR_numbers_()
- links_()

levels.txt (v.0.4.0 - v.0.4.1)
- *incorrectly labelled as levels.txt
- 2 new levels added
- PR_numbers_()
- links_()

Music
- added 2 new music files
- PR_numbers_()
- links_()

========

July 31 - August 6

dsn_class (v.0.2.4 - v.0.2.5)
- *incorrectly labelled as dsn_class.txt (v.0.2.3) v1
- FIX_4
    - Added compatibility for color names with two underscores (ex: EDIT_DARK_GREEN)
- PR_numbers_()
- links_()

- *incorrectly labelled as dsn_class.txt (v.0.2.3) v2
- FIX_5
    - brown color added
- PR_numbers_()
- links_()

- Added compatibility with colors containing underscores in their naming for text (at most 2)
- PR_numbers_()
- links_()

- FIX_1
    - Top collision is now wider to have the block experience hitting the bottom of blocks in a wider area, meaning corners are now detected.
    - Bottom collision is also wider to avoid clipping through the corner of blocks. This change also allows the player to jump later (feasibly), meaning jumps are more precise as well. 
- PR_numbers_()
- links_()

- FIX_2
    - Changes to platform (bottom) and wall collision to be a range (more robust).
- PR_numbers_()
- links_()

- *incorrectly labelled as dsn_class.txt
- FIX_3
    - added color Licorice_black
- PR_numbers_()
- links_()

dsn_levels (v.0.3.3 - v.0.3.4)
- *incorrectly labelled as dsn_levels.txt (v.0.3.3) v1
- FIX_2
    - brown color added
- PR_numbers_()
- links_()

- *incorrectly labelled as dsn_levels.txt (v.0.3.3) v2
- FIX_3
    - Changed level select to include the last level
- PR_numbers_()
- links_()

- Test
    - additional comments
    - new branch got created for testing level_0 called test
- PR_numbers_()
- links_()

- Moved statistics updating (update_mem) and level changing (self.level_id) to dsn_levels from main.
    - drastically reduced chance for level repetition
- Removed music value in preparation for having music play in a wider scope, or in the main loop in main.
    - preventing music from repeating and restarting whenever the level is over or restarted
- Changed the button for returning to the menu from "R" to "B", as in back (for now). "R" now is used to restart the level when paused
- PR_numbers_()
- links_()

- *incorrectly labelled as dsn_levels.txt
- FIX_4
    - added color Licorice_black
- PR_numbers_()
- links_()

Main (v.0.2.1)
- removed song call line with dsn_levels v.0.3.4 patch and re-edited memory to prevent repetition
- PR_numbers_()
- links_()

levels.txt (v.0.3.4 - v.0.3.9)
- *incorrectly labelled as levels.txt (v.0.3.0)
- 2 new levels added
- PR_numbers_()
- links_()

- *incorrectly labelled as levels.txt (v.0.3.3+)
- 2 new levels added
- PR_numbers_()
- links_()

- *incorrectly labelled as levels.txt
- 1 new level added
- PR_numbers_()
- links_()

- *incorrectly labelled as levels.txt
- 2 new level added
- PR_numbers_()
- links_()

- *incorrectly labelled as levels.txt
- editing art and adjusting blocks for newer collision
- PR_numbers_()
- links_()

Music
- added 2 new music files
- PR_numbers_()
- links_()

Additional Notes
- themes for music in each levels or series of levels are needed

==============

July 24 - July 30

dsn_class (v.0.2.4)
- FIX_1
    - Temporary collision fix
- PR_numbers_()
- links_()

- FIX_2
    - Fixed loading levels (if colors were in a tuple of format (x, y, z)).
    - Removed unnecessary print statements
- PR_numbers_()
- links_()

- *incorrectly labelled as dsn_class.txt (v.0.2.3)
- FIX_3
    - added two new colors for interpretations
- PR_numbers_()
- links_()

dsn_levels (v.0.3.2 - v.0.3.3)
- Fixed jump immediately occurring when jump (or start) is pressed
- Fixed self.respawn spawning not exactly being in the middle of the respawn block
- Added a 'hold' option for selecting levels (no multiple pressing required)
- Holding "A" or "D" for selecting levels will speed up after 3 seconds 
- PR_numbers_()
- links_()

- added pngs of custom png title
- PR_numbers_()
- links_()

- FIX_1
    - Removed annoying print statements for jump
    - Reduced delay on jump
- PR_numbers_()
- links_()

- *incorrectly labelled as dsn_levels.txt (v.0.3.3)
- FIX_2
    - added two new colors for interpretations
- PR_numbers_()
- links_()

levels.txt (v.0.2.9 - v.0.3.4)
- *incorrectly labelled as update levels.txt
- 1 new level added
- PR_numbers_()
- links_()

- *incorrectly labelled as update levels.txt
- fixing labelling issues and correcting any mistakes in levels.txt
- 2 new levels added
- PR_numbers_()
- links_()

- *incorrectly labelled as update levels.txt (v.0.2.6+)
- replacing tuple of color with static_color 
- PR_numbers_()
- links_()

- *incorrectly labelled as update levels.txt (v.0.2.7+)
- removed two levels (didn't work at all OR too dark)
- PR_numbers_()
- links_()

- *incorrectly labelled as update levels.txt (v.0.2.8+)
- changed all class names to level names 
- re-edited levels to work with new collision logic
- re-drew levels to seem more consistent
- PR_numbers_()
- links_()

- *incorrectly labelled as update levels.txt (latest txt with keyerror)
- edited levels and fixed crasahing error
- PR_numbers_()
- links_()

Images
- added 8 pngs for the title to keep as a record
- PR_numbers_()
- links_()

- taking all the images and moving them into the images folder (this includes the previously mentioned pngs and any addditional images in the folder)
- PR_numbers_()
- links_()

- deleting all the "loose" images in the assets folder and re-organizing them as mentioned above (including 8 pngs mentioned above) - (over 15 PRs)
- PR_numbers_()
- links_()

- certain image ideas were removed from game as they were added to the game
- PR_numbers_()
- links_()

- added fancy title
- PR_numbers_()
- links_()

- added sketches for levels in assets/images/sketches
- PR_numbers_()
- links_()

README
- for assets/images/sketches - created to hold future level ideas and sketches
- PR_numbers_()
- links_()

Additional Notes
- dsn_levels animation for transitioning multiple levels quickly is very choopy (may cause nausea - it will be fixed later)

===========

July 17 - July 23

dsn_class (v.0.2.3 - v.0.2.4)
- removed redundant comments
- static function of time of converting time was added
- added static function of adding_time as to combine times and not overwrite them
    - helpful for updating menu time
- memory class had time added
- PR_numbers_()
- links_()

- FIX 1
    - removed difficulty, a planned but not implemented feature.
- PR_numbers_()
- links_()

- Added difficulty and music options to dsn_class Memory.
    - Difficulty is used in the SquareMe class to change it's movement speed. This includes jumps, horizontal sliding and gravity.
    - Music isn't properly implemented yet and is there only for testing purposes.
- PR_numbers_()
- links_()

dsn_levels (v.0.3.0 - v.0.3.1)
- LevelScene class had time added
- Made update_stats function in the StatsPage class to update the text whenever needed (less messy)
- PR_numbers_()
- links_()

- FIX 1
    - Removed difficulty (planned, but not implemented)
    - fixed memory loading where it would try to get Memory class variables from a None type
- PR_numbers_()
- links_()

- Made an options page (OptionsPage) in dsn_levels. At present, only difficulty and music can be changed
    - Only changing difficulty has a real effect on the game. Music doesn't do anything yet and is only there for testing
    - Choosing which options to change by pressing UP/W and DOWN/S (difficulty or music). 
    - Pressing LEFT/A and RIGHT/D will change the selected option (which difficulty or which music).
- PR_numbers_()
- links_()

Main (v.0.2.0)
- total time of a session is tracked
- PR_numbers_()
- links_()

levels.txt (v.0.2.8)
- *incorrectly labelled as update levels.txt
- 4 levels were edited to be playable
- formatting correction
- tuple for colors converted to static_colors
- PR_numbers_()
- links_()

Images
- added D_letter.png
- PR_numbers_()
- links_()

README (v.0.2.8)
- updated to notify players about changing difficulty and speed
- PR_numbers_()
- links_()

Addtional Notes
- time statistics will include miliseconds to consider memory updating in less than a second (which matters most in menuscene).
- time functions will have total play time when saving is implemented
- no way to save previous game instances yet, this will be owrked on later

========

July 10 - July 16

dsn_class (v.0.2.1 - v.0.2.2)
- Changed collision logic for the 120 FPS update.
    - testing game speed
- Cleaned up some unnecessary comments
- PR_numbers_()
- links_()

- Minor optimization to ceiling collision
- PR_numbers_()
- links_()

dsn_levels (v.0.2.7 - v.0.2.9)
- removed self.walls completely
- Removed unused variables like self.mid_jump
- removed unnecessary comments in MenuScene's update function (player functionality) and init (spam about spawn)
- PR_numbers_()
- links_()

- Changed animation for level select to match with 120 FPS
- fixed level select values to not include 0 (not a valid ID when loading levels.txt) and for it to be within the defined levels of levels.txt.
- PR_numbers_()
- links_()

- Added a statistics page that will display the death counter and jump counter for that level if completed successfully
- LevelScene now takes memory as a parameter, rather than level data/elements contained in memory
- PR_numbers_()
- links_()

Main (v.0.1.8 - v.0.1.9)
- 120 FPS change included here is necessary
- Changed all LevelScene classes to need memory to be passed rather than it's level data/elements
- PR_numbers_()
- links_()

levels.txt (v.0.2.7)
- *incorrectly characterized as levels.txt (v.0.2.6)
- replaced all instance of self.walls to self.platfroms as it served the same purpose as self.platforms
- 2 new levels added
- PR_numbers_()
- links_()

README (v.0.2.6 - v.0.2.7)
- updated to have a link to better instructions
- PR_numbers_()
- links_()

- better despriction of the game and a re-write of instruction
- PR_numbers_()
- links_()

Addtional Notes
- dsn_levels - will display total deaths, total jumps and other planned statistics
- Needs more decoration to be visually appealing, as currently, it only has text with no decoration

======

July 3 - July 9

dsn_class (v.0.1.9 - v.0.2.0)
- color constants added
- created DSNElement to hold information for drawing a pygame rect, including the color and dimensions
    - necessary in loading information from a text file
    - text file is being loaded in the Memory class with the "load_levels" method/function
- PR_numbers_()
- links_()

- Memory class updated
    - Updated load_levels method in Memory class to read in rect and line properties from a text file. pygame.draw.line is now compatible with this method.
    - load_levels is also now compatible with colors defined as a constant (ex: BLACK) or tuple (ex: (0, 0, 0). This is supplemented by color_lookup to get the constants (otherwise a tuple is fine)
    - DSNElements changed self.rect into self.shape to compensate line being added and being different from a rect when defined. Additionally, it has a new self.type variable to distinguish a line from a rect
- PR_numbers_()
- links_()

dsn_levels (v.0.2.6)
- tutorial and all other levels removed and options added such as filler_classes for now
- From dsn_class - Memory
    - Added load_levels function that read in a text file containing level data. This function is called in main.
    - dsn_levels is revamped to only have PlayLevel, which is a child class that uses the read data from load_levels to draw and play the level
    - removed all the level informaiton and transferred it into levels.txt
    - Fixed level_select choose_id starting at level 0 in it's count (which is the menu option and isn't an option for any of the levels)
    - Fixed players being able to select a level while in the jumping animation in level_select
- PR_numbers_()
- links_()

Main (v.0.1.7)
- Added memory class load_levels when Program class is called (or when the game starts).
- For both dsn_levels and main, LevelScene's now must be passed level data (level_title/data and level_elements)
- PR_numbers_()
- links_()

levels (v.0.2.6) - (split and taken from dsn_levels (reason for continuaitoin))
- has all dsn_levels have been added now from (tut1 to easy19)
- the extra equal sings are there for me to add more levels in the future
- formatting fixed for three lines into one
- fixing any lines that didn't work or had informaiton during the copy and paste from the data transfer
- PR_numbers_()
- links_()

Music
- 4 tracks of good_vibes was added
- PR_numbers_()
- links_()

README (v.0.2.5)
- updated to have better instructions
- PR_numbers_()
- links_()

Additional notes
- dsn_class
    - printing levels as they load to check their validitiy
    - local element_lookup and color_lookup variables are defined but not used
        - option for converting level element identifiers from strings into integers if loading levels in dsn_levels isn't compatible or as readable with strings.
- PR_numbers_()
- links_()

======

***From this point onwards, everything will be as a weekly update basis as the code is  split into multiple different parts but some code gets more tested, updated, and revisied with more additions being made.

- It will be broken into paragraphs and if there is a version change within the same week then there will be a noticable space seperating which version is where

======

v.0.2.1 - v.0.2.5

--- Level Editor
- Updated to work with the level selector animation

--- Function
- respawn boxes were added and fixed
      - Player respawn has also been added, showing up as lime green. Currently, the respawn for the player colliding with these elements is set to be in the middle of them. Adding respawns needs to be done in a "self.respawn_zones" list within each level "level_render" class function. The new respawn feature could be seen in the "Mind the Gap" level, or what it's currently set to.
- level selector has been added but needs the animation to be fixed
- memory updating using both times passed and victory counter
      - The memory is updated first before any scenes are updated/checked (if statement is put before scene methods). The memory update is only called when the level is complete (victory counter and time passed) before changing scenes, which will update the victory counter to not update more than once. This is a part of fixing the memory update bug occurring more than once 
- time passed variables added, allowing for block sizing and movement to be changed quicker across the screen when WASD or Arrow keys were being held, saving time for level creation.

--- Levels 
- ~12 more levels are being added and spawn were saved in issues

--- Additional Features
- dsn_levels will be transformed into analyzing levels from notepad to reduce size and space and faster rendering of the level
- most levels have been tested and added
- dsn_lvl_editor has had a few changes in formatting and coloring (for now - more to come)

==========

v.0.2.0

---Render
- Fixed level text being in front of pause/win text.

- Player rendering has been temporarily put in the render_text functions. The player will still be rendered behind the text but will be in front of level elements. In the future, this function could be renamed to "render_over", as in rendering over the elements. This is an important change for rendering the player above the respawn block.

--- Gravity
- Fixed gravity counter (amplification) not resetting when respawning. This issue was obvious when the player respawns were set in the air above the platforms.

--- New Function
- Player respawn has also been added, showing up as lime green. Currently, the respawn for the player colliding with these elements is set to be in the middle of them.
- Adding respawns needs to be done in a "self.respawn_zones" list within each level "level_render" class function. 
- The new respawn feature could be seen in the "Mind the Gap" level, or what it's currently set to.

=================

v.0.1.7 - v.0.1.9

--- Levels
- 6 new levels have been added to the game

---Collision
- Fixed collision of the square bumping into the left and right sides. 
- Also fixed the collision detecting the square going inside of the platform :)
- Updated collision logic to use hitboxes above, below, and beside the player. Bottom hitboxes are used to obtain the distance between the player and the bottom platform and ensure the player square doesn't go into the platform. If the gravity adding onto the player square's y value exceeds the y position of the platform, then the square's y value will be on top of the platform (platform y position + the square's height).
- Minor changes include the self.direction being more involved in moving x as an integer (-1 or +1) rather than a boolean. You'll see that there's one less if statement for moving the x position, as it uses the self.direction instead of two if statements for +1 or -1.
- Fixed an if statement that was over-indented in gravity (gravity counter)

---Player
- Changed self.player.direction to match with the new dsn_class update

---Additional Features
- updated readme
- guidelines for making the game is removed
- level editor made on a different repository and is being used for future level-making

=================

v.0.1.4 - v.0.1.6

--- Rendering
- fps changed form 500 to 240
- self.draw list was added for level effects to make the game more visually interesting

--- Memory
- Main was changed to have memory and record data
- Added function to the Memory class in main and in the Levels and level_id to Scene. Levels with id lesser than -1 are invalid levels (such as filler, or options/credits in the future)
- the data will only be recorded for levels once it has been beaten

---- Level Making
- mouse, candles, and block maze 5 levels were created and added
- Level ID is also used to track the player's level progress by adding the most recently played game to it's dictionary 

--- Menu Scene
- menu scene has been updated with optional choices that the player can choose
- Changed pause + quit (with q) to set self.run_scene to False instead of closing game to avoid crashing
- altered main to complement these changes, allowing the game to be closed (not scene.run_scene) with a button press (in the levels) while the game is still running (self.running)
- MenuScene now has a jump counter, but doesn't have a death counter (as you cannot die in the menu, yet)

--- Square Me (class)
- held jumps glitch was fixed (player always started off jumping which was not intended)
- SquareMe (square player) class has an additional jumps statistic to complement the memory class. This jumps variable is apart of the dsn_levels bug fix in holding jumps.
- Added win boxes after walls/platforms to make it visible, as gaps weren't left for them to be rendered. Key up (arrow) was added as a possible key to start the level

----- Collision Update
- collision of bouncing bewteen boxes been resolved through both collision logic in code and replacing them with either blocks and removing the walls
- frame rate changed for collision logic to be consistent

---- Additional informaiton
- filler options have been added for the menuscene as settings and level-select hasn't been implented into the code yet
- Both are still inefficient processes as the menu is always recording and updating, and the levels have a burst in recording data (during the level transition). There was an additional bug fix where the player would sink into the platform for each bounce it did. This update is in addition to dsn_class and dsn_level v.0.1.6.

==============

v.0.1.3
---- Levels
- all tutorials levels have been added and 1 easy level has been added
- levels have been split into 4-5 major sections; tutorial, easy, hard, night, gravity
- improved gravity and removed jumping instantouely in the start glitch

---- Additional informaiton
- each level has its oown themes for music, so we will have to fix that accordingly
- already set it up so each level will have it's own theme, we just need to have those made and ready. Currently, all the tutorial levels are playing level-loop1 and the main menu is playing the main menu music

==============

v.0.1.2
---- File
- main.py has been split into 3 major files (main.py, dsn_class.py, dsn_levels.py) for ease of editing and reading for other coders and viewers

---- Additional informaiton
- each level has its oown themes for music, so we will have to fix that accordingly
- already set it up so each level will have it's own theme, we just need to have those made and ready. Currently, all the tutorial levels are playing level-loop1 and the main menu is playing the main menu music

==============

v.0.1.1
---- Level Making
- 2 extra levels have been added

---- Menu Scene
- quiting option has been made
- More details have been addded for quiting and unpausing

---- Music
- sfx for jumping has been added
- music has been added and updated to work

---- Text
- more texts have been written onto levels

==============

v.0.0.5 and v.0.0.6
----- Level Making
- very crude level making
- platforms originally had only top and side collision, but now have bottom collision
- walls only have side collision
- it might be better in the future to only use platforms and rename them to blocks

----- Collision Update
- the collision is now dependent on collidelistall to get all collisions happening on that frame. this is useful for detecting instances of multiple collisions at once and having the square respond to them

----- MenuScene Redfined
- MenuScene is now a child class of LevelScene, but with altered functionality. It doesn't use any of the square controls, as the square is made to move and jump by itself.
- In the future, a menu title splash and options need to be implemented.

=======

v.0.0.4 
----- Death, Victory and Respawning
- death zones were added in the SquareMe class to determine if a collision occur and will cause the player to unalive if in contact. These zones are rendered in red. Death zones are also implemented in the LevelClass, as defined below.
- on start or whenever the player square dies, it will be placed into it's defined spawning location and be frozen in place. Furthermore, the square will wait for the player to press the jump button ("w" or "space") to initiate movement again.
- victory/win zones were added in the LevelClass to detect if the square collided with the zone to win the level. A text animation was added playing "don't stop now" sequentially to indicate that the player won. The player also freezes up too to stop movement as the level ended.

----- LevelScene and TutorialLevel
- LevelScene and TutorialLevel are their own separate classes. More specifically, TutorialLevel is the child class of LevelScene. All future levels will be made using LevelScene as the parent. LevelScene contains all the required logic for this game to function, including death, respawn, pausing/freezing the game, square movement and collision detection. Therefore, every level will be it's child class, using the parent's init, input and update (still need to be defined). The parent's render function is also used in the child's render function but will have additional rendering for death, win, platform and wall zones. Every level child class will have a different render function, defining the different level arrangements/layouts.

----- Additional Information
- in the future, text needs to be added
- a menu screen is also needed too with it's options.
- bug hunting for the collision, as it seems to work fine in the TutorialLevel.
- apologies for the delay in updates

=======

v 0.0.3
----- LevelScene
- in the __init__ function:
  - Defined the scene, then the necessary level elements such as platforms/walls, death_zones and win_zones
  - Also defined the player
- Input function updated to include changing between the menu and level scene with "c" and the purple squares jump ability with "w" or "space"
- Update function has purple square movement and collision functions
- Render function for the walls/platforms and the player

----- SquareMe Class
- in the __init__ function:
  - the first block of code describes the basic parameters of the square (passed through the SquareMe class when created), and it's rendering (render object, alive status and freeze)
  - the freeze feature is planned to be used for when players want to pause their game
  - the second block of code describes the purple square characteristics such as jumping, gravity, movement direction, and collision
  
- jump function describing the vertical jump movement (only up)
- collision function describing:
  - collide_id and the touching rectangles parameters if applicable are defined, which are used to make the code shorter and neater.
  - the first set of if's describe collision with the sides of the platform.   - both left and right are detected by seeing the x position of the block relative to the platform/wall
  -the second set of if's describe if the purple block is on the platform or not, which will decide if gravity and jumping ability is enabled

----- Additional Information
- what to expect in the next update:
  - death zones and end zones to be implemented as red and cyan areas respectively
  - player death and respawn positioning
  - fixing a bug where the player spawns inside of a platform (player respawn positioning)
  - going in between multiple levels
  - pause feature (freeze)

=======

v 0.0.2
----- Changes to Main 
- added a Scene class describing the basic functions required in each scene. These are input (key inputs that are pressed and/or held), update (used to dynamically rewrite any values during a certain condition) and render (for loading the graphics)
- altered the Program class to incorporate the Scene class and it's functions (input, update and render)
- completed the while game loop in the Program class, but could be altered in the future for more variables if needed.
- rearranged static program class variable into the if __name == "__main__" condition
- added a Menu (MenuScene subclass of Scene) that's still a work in progress
- added a Level (LevelScene subclass of Scene) that's still a work in progress
- both Menu and Level currently renders two different colors, purple and white, by pressing "w".
- the window size is set at 640 by 480 (width and height respectively)

----- Additional Information
- This is a temporary version used to ensure that the program is able to:
  - run the game loop without any problems
  - is able to be closed (currently with the top right X)
  - responds to key presses ("w" to change the background)
  - incorporate both the Program class and Scene classes together
- The Scene classes were made with the help of: https://nerdparadise.com/programming/pygame/part7 
- The base "Scene class" contains the functions that all scenes should have, such as input, render and update. The subclasses in addition to the base functions, add their own unique functions depending on what that scene is used for. For instance, the MenuScene class would have a functions allowing the player to select certain conditions (play, credits, options).

=======

v 0.0.1
- if you see this make any update comments here above by creating a new version number by following the trend (yes it's stupid rn, cuz I have no idea how they do version update and trends - its on my to-do list)

=======

v 0.0
- file and gaming code was just created
