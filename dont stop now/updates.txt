v.0.0.3
----- LevelScene
- in the __init__ function:
  - Defined the scene, then the necessary level elements such as platforms/walls, death_zones and win_zones
  - Also defined the player
- Input function updated to include changing between the menu and level scene with "c" and the purple squares jump ability with "w" or "space"
- Update function has purple square movement and collision functions
- Render function for the walls/platforms and the player

----- SquareMe Class
- in the __init__ function:
  - the first block of code describes the basic parameters of the square (passed through the SquareMe class when created), and it's rendering (render object, alive status and freeze)
  - the freeze feature is planned to be used for when players want to pause their game
  - the second block of code describes the purple square characteristics such as jumping, gravity, movement direction, and collision
  
- jump function describing the vertical jump movement (only up)
- collision function describing:
  - collide_id and the touching rectangles parameters if applicable are defined, which are used to make the code shorter and neater.
  - the first set of if's describe collision with the sides of the platform.   - both left and right are detected by seeing the x position of the block relative to the platform/wall
  -the second set of if's describe if the purple block is on the platform or not, which will decide if gravity and jumping ability is enabled

----- Additional Information
- what to expect in the next update:
  - death zones and end zones to be implemented as red and cyan areas respectively
  - player death and respawn positioning
  - fixing a bug where the player spawns inside of a platform (player respawn positioning)
  - going in between multiple levels
  - pause feature (freeze)

=======

v0.0.2
----- Changes to Main 
- added a Scene class describing the basic functions required in each scene. These are input (key inputs that are pressed and/or held), update (used to dynamically rewrite any values during a certain condition) and render (for loading the graphics)
- altered the Program class to incorporate the Scene class and it's functions (input, update and render)
- completed the while game loop in the Program class, but could be altered in the future for more variables if needed.
- rearranged static program class variable into the if __name == "__main__" condition
- added a Menu (MenuScene subclass of Scene) that's still a work in progress
- added a Level (LevelScene subclass of Scene) that's still a work in progress
- both Menu and Level currently renders two different colors, purple and white, by pressing "w".
- the window size is set at 640 by 480 (width and height respectively)

----- Additional Information
- This is a temporary version used to ensure that the program is able to:
  - run the game loop without any problems
  - is able to be closed (currently with the top right X)
  - responds to key presses ("w" to change the background)
  - incorporate both the Program class and Scene classes together
- The Scene classes were made with the help of: https://nerdparadise.com/programming/pygame/part7 
- The base "Scene class" contains the functions that all scenes should have, such as input, render and update. The subclasses in addition to the base functions, add their own unique functions depending on what that scene is used for. For instance, the MenuScene class would have a functions allowing the player to select certain conditions (play, credits, options).

=======

v0.0.1
- if you see this make any update comments here above by creating a new version number by following the trend (yes it's stupid rn, cuz I have no idea how they do version update and trends - its on my to-do list)

=======

v0.0
- file and gaming code was just created
